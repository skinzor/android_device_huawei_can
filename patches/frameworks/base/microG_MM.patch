From e6ab8a7c51e0b649ce9563a029f2c55ad932f17f Mon Sep 17 00:00:00 2001
From: "#Henkate @xda" <robertpopescu95@yahoo.com>
Date: Fri, 11 Aug 2017 18:48:30 +0300
Subject: [PATCH 1/3] microG support [1/3]

---
 core/res/AndroidManifest.xml | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/core/res/AndroidManifest.xml b/core/res/AndroidManifest.xml
index 84c3a9c17cd..b35161eab2a 100644
--- a/core/res/AndroidManifest.xml
+++ b/core/res/AndroidManifest.xml
@@ -1665,6 +1665,13 @@
         android:description="@string/permdesc_getPackageSize"
         android:protectionLevel="normal" />
 
+    <!-- @hide Allows an application to change the package signature as
+         seen by applications -->
+    <permission android:name="android.permission.FAKE_PACKAGE_SIGNATURE"
+        android:protectionLevel="dangerous"
+        android:label="@string/permlab_fakePackageSignature"
+        android:description="@string/permdesc_fakePackageSignature" />
+
     <!-- @deprecated No longer useful, see
          {@link android.content.pm.PackageManager#addPackageToPreferred}
          for details. -->

From a45c1a29db1085c97d0fdced06c80a3b3c23e9e0 Mon Sep 17 00:00:00 2001
From: "#Henkate @xda" <robertpopescu95@yahoo.com>
Date: Fri, 11 Aug 2017 18:49:15 +0300
Subject: [PATCH 2/3] microG support [2/3]

---
 core/res/res/values/cm_strings.xml | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/core/res/res/values/cm_strings.xml b/core/res/res/values/cm_strings.xml
index a8fcbe52024..45e843c19e8 100644
--- a/core/res/res/values/cm_strings.xml
+++ b/core/res/res/values/cm_strings.xml
@@ -45,6 +45,11 @@
     <!-- [CHAR LIMIT=NONE] Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
     <string name="permdesc_changePhoneBlacklist">Allows an app to change the phone numbers that are blocked for incoming calls or messages.</string>
 
+    <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permlab_fakePackageSignature">Spoof package signature</string>
+    <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permdesc_fakePackageSignature">Allows the app to pretend to be a different app. Malicious applications might be able to use this to access private application data. Grant this permission with caution only!</string>
+
     <!-- Title of an application permission, listed so the user can choose whether they want the application to do this. -->
     <string name="permlab_setKeyguardWallpaper">set keyguard wallpaper</string>
     <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->

From 0cc05dc4b7f06029bda393a0e8ea6b1c5bc239a5 Mon Sep 17 00:00:00 2001
From: "#Henkate @xda" <robertpopescu95@yahoo.com>
Date: Fri, 11 Aug 2017 18:49:51 +0300
Subject: [PATCH 3/3] microG support [3/3]

---
 .../android/server/pm/PackageManagerService.java   | 23 ++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index 21d3b4be1f5..089f03c9989 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -2824,8 +2824,27 @@ PackageInfo generatePackageInfo(PackageParser.Package p, int flags, int userId)
         final Set<String> permissions = permissionsState.getPermissions(userId);
         final PackageUserState state = ps.readUserState(userId);
 
-        return PackageParser.generatePackageInfo(p, gids, flags,
-                ps.firstInstallTime, ps.lastUpdateTime, permissions, state, userId);
+        return mayFakeSignature(p, PackageParser.generatePackageInfo(p, gids, flags,
+                ps.firstInstallTime, ps.lastUpdateTime, permissions, state, userId),
+                permissions);
+    }
+
+    private PackageInfo mayFakeSignature(PackageParser.Package p, PackageInfo pi,
+            Set<String> permissions) {
+        try {
+            if (permissions.contains("android.permission.FAKE_PACKAGE_SIGNATURE")
+                    && p.applicationInfo.targetSdkVersion > Build.VERSION_CODES.LOLLIPOP_MR1
+                    && p.mAppMetaData != null) {
+                String sig = p.mAppMetaData.getString("fake-signature");
+                if (sig != null) {
+                    pi.signatures = new Signature[] {new Signature(sig)};
+                }
+            }
+        } catch (Throwable t) {
+            // We should never die because of any failures, this is system code!
+            Log.w("PackageManagerService.FAKE_PACKAGE_SIGNATURE", t);
+        }
+        return pi;
     }
 
     @Override
